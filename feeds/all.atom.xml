<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sergei Vovk | Blog</title><link href="https://svovk.github.io/" rel="alternate"></link><link href="https://svovk.github.io/feeds/all.atom.xml" rel="self"></link><id>https://svovk.github.io/</id><updated>2018-08-08T10:00:00+03:00</updated><entry><title>Queries to start troubleshooting an Oracle Text index</title><link href="https://svovk.github.io/queries-to-start-troubleshooting-an-oracle-text-index.html" rel="alternate"></link><published>2018-08-08T10:00:00+03:00</published><updated>2018-08-08T10:00:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-08-08:/queries-to-start-troubleshooting-an-oracle-text-index.html</id><summary type="html">&lt;p&gt;Oracle Text is a full-text search engine available out of the box in all modern Oracle Database distributions. Its capabilities are integrated absolutely seamlessly into SQL and it might be a decent choice for providing Google-like search in Oracle ecosystems. &lt;/p&gt;
&lt;p&gt;In the real world, it is successfully used in many â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Oracle Text is a full-text search engine available out of the box in all modern Oracle Database distributions. Its capabilities are integrated absolutely seamlessly into SQL and it might be a decent choice for providing Google-like search in Oracle ecosystems. &lt;/p&gt;
&lt;p&gt;In the real world, it is successfully used in many business-grade software (including shipped by Oracle). I frequently work with this sort of systems. Inevitably it means that I face with different kinds of issues including related to Oracle Text. In this post, I will share few basic queries that I find useful for starting troubleshooting problems in Oracle Text indexes.&lt;/p&gt;
&lt;h3&gt;General Information&lt;/h3&gt;
&lt;p&gt;The first query is not directly related to Oracle Text. Although, often it makes sense to start an investigation by getting a definition of the table you experience the problem with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;dbms_metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_ddl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;TABLE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;TABLE_NAME&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;OWNER&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;dual&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following 2 queries have a lot of information in common. Although I usually run them both. The first one generates a script that may be used to set up specified index. The second one generates a human-readable report describing index properties.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;ctx_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_index_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;index_name&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;dual&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;ctx_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;index_name&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;dual&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Row-level queries&lt;/h3&gt;
&lt;p&gt;The question that arises almost always - are all rows of a table indexed? Here is a query that may answer it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;rowid&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;textkey&lt;/span&gt;
          &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;dr$files_content_idx$k&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Although, if some row isn't indexed, it doesn't necessary means that something is wrong. For example, NULL values aren't eligible for indexing. Also, the row may be simply waiting in the queue. Here is a query that shows rows pending to be processed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;ctxsys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dr$pending&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
  &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
    &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rowid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pnd_rowid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Though "real" errors sometimes occur as well. You may find all affected rowids in issue-reporting table. Here is how to join it with your target table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;ctxsys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dr$index_error&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
  &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
    &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rowid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ERR_TEXTKEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Summary queries&lt;/h3&gt;
&lt;p&gt;It also is easy to get an overview of what is going on with following queries. They select data from database views which are based on the same &lt;code&gt;ctxsys.dr$pending&lt;/code&gt; and &lt;code&gt;ctxsys.dr$index_error&lt;/code&gt; tables.&lt;/p&gt;
&lt;p&gt;Number of rows pending to be indexed: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;pnd_index_name&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;
    &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;ctxsys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ctx_user_pending&lt;/span&gt;
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;pnd_index_name&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Errors count:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;err_index_name&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="n"&gt;err_text&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;
    &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;ctx_user_index_errors&lt;/span&gt;
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;err_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="n"&gt;err_index_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Afterword&lt;/h3&gt;
&lt;p&gt;While Oracle Text is a black box in many aspects, it is possible to transparently check coverage of its indexes. It makes life of the maintaining personnel much easier. Though don't expect that you always will be able to extract some useful information from the error messages produced. Prepare yourself to face things like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DRG-11207: user filter command exited with status 3
DRG-00100: internal error, arguments : [50200],[drugi.c],[557],[],[]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DRG-11207: user filter command exited with status 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You'll have to contact Oracle support to troubleshoot them. Still some of the messages are self-explaining. A couple of examples that I saw recently:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DRG-11207: user filter command exited with status 1
DRG-11223: Third-party filter indicates this document is password protected or encrypted.
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DRG-11207: user filter command exited with status 1
DRG-11222: Third-party filter does not support this known document format.
&lt;/pre&gt;&lt;/div&gt;</content><category term="Oracle Database"></category><category term="Oracle Text"></category></entry><entry><title>Walkthrough - Creating an Oracle Database Docker Image</title><link href="https://svovk.github.io/walkthrough-creating-an-oracle-database-docker-image.html" rel="alternate"></link><published>2018-07-17T10:20:00+03:00</published><updated>2018-07-17T10:20:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-07-17:/walkthrough-creating-an-oracle-database-docker-image.html</id><summary type="html">&lt;p&gt;Docker containerization is super hot nowadays. Among the things I like the most - hey, it allows me to run Linux software on my Mac which makes my life much easier. Oracle Database is one of the products that aren't shipped for OS X which I use frequently. Fortunately, Oracle doesn't â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Docker containerization is super hot nowadays. Among the things I like the most - hey, it allows me to run Linux software on my Mac which makes my life much easier. Oracle Database is one of the products that aren't shipped for OS X which I use frequently. Fortunately, Oracle doesn't want to leave developers working with their software aside of this revolution and supports running many of their product within containers. In this post, I will go through steps of setting up a container having Oracle Database on board. We will need just a couple of things for it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker (surprised?)&lt;/li&gt;
&lt;li&gt;Oracle account&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Prepare the stage&lt;/h2&gt;
&lt;p&gt;In this guide we will build an Oracle Database Docker image ourselves. To do it, in the first place, we have to prepare a couple ingredients:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone Oracle &lt;code&gt;docker-images&lt;/code&gt; Git repository to your machine or download the repo as an &lt;a href="https://github.com/oracle/docker-images/archive/master.zip"&gt;archive&lt;/a&gt; and unzip it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/oracle/docker-images
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -L https://github.com/oracle/docker-images/archive/master.zip &amp;gt; docker-images.zip
unzip docker-images.zip
mv docker-images-master docker-images
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html"&gt;Oracle Database Software Downloads&lt;/a&gt; page and download x86-64 version of Oracle Database 12c Release 2 binaries. &lt;/p&gt;
&lt;p&gt;You will have to accept License Agreement and log in with your Oracle account.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180717_oracle_database_in_a_docker_container/accept_license.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180717_oracle_database_in_a_docker_container/download_oracle_database.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Put downloaded database distribution archive into &lt;code&gt;docker-images/OracleDatabase/SingleInstance/dockerfiles/12.2.0.1&lt;/code&gt; directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -l docker-images/OracleDatabase/SingleInstance/dockerfiles/12.2.0.1
total 6745656
-rw-r--r--  1 svovk  staff          62 Jul 17 09:35 Checksum.ee
-rw-r--r--  1 svovk  staff          62 Jul 17 09:35 Checksum.se2
-rw-r--r--  1 svovk  staff        2639 Jul 17 09:35 Dockerfile.ee
-rw-r--r--  1 svovk  staff        2645 Jul 17 09:35 Dockerfile.se2
-rwxr-xr-x  1 svovk  staff        1148 Jul 17 09:35 checkDBStatus.sh
-rwxr-xr-x  1 svovk  staff         905 Jul 17 09:35 checkSpace.sh
-rwxr-xr-x  1 svovk  staff        2953 Jul 17 09:35 createDB.sh
-rw-r--r--  1 svovk  staff        6878 Jul 17 09:35 db_inst.rsp
-rw-r--r--  1 svovk  staff        9203 Jul 17 09:35 dbca.rsp.tmpl
-rwxr-xr-x  1 svovk  staff        2250 Jul 17 09:35 installDBBinaries.sh
-rw-r--r--@ 1 svovk  staff  3453696911 Jul 17 11:24 linuxx64_12201_database.zip
-rwxr-xr-x  1 svovk  staff        6140 Jul 17 09:35 runOracle.sh
-rwxr-xr-x  1 svovk  staff        1015 Jul 17 09:35 runUserScripts.sh
-rwxr-xr-x  1 svovk  staff         758 Jul 17 09:35 setPassword.sh
-rwxr-xr-x  1 svovk  staff         876 Jul 17 09:35 setupLinuxEnv.sh
-rwxr-xr-x  1 svovk  staff         678 Jul 17 09:35 startDB.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Build the image&lt;/h2&gt;
&lt;p&gt;Ok, at this point everything is ready to build the image itself. It requires only 2 commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd docker-images/OracleDatabase/SingleInstance/dockerfiles/
./buildDockerImage.sh -v 12.2.0.1 -e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We pass following parameters to &lt;code&gt;buildDockerImage&lt;/code&gt; script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; specifies database version for which the image should be built&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; says that we are going to build enterprise edition database&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Expect that it will take some time to build the image (on my Mid-2012 MacBook Pro it took about 30 minutes). At the end of the build process you'll see following message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Oracle Database Docker Image for &amp;#39;ee&amp;#39; version 12.2.0.1 is ready to be extended: 

--&amp;gt; oracle/database:12.2.0.1-ee

Build completed in 2005 seconds.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now list of available docker images should contain &lt;code&gt;oracle/database:12.2.0.1-ee&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker images
REPOSITORY               TAG                 IMAGE ID            CREATED             SIZE
oracle/database          12.2.0.1-ee         163d644d8a0c        12 hours ago        13.2GB
oraclelinux              7-slim              b1af4ba0cf19        11 days ago         117MB
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Start the database!&lt;/h2&gt;
&lt;p&gt;All is ready to run a container based on the image we just created. But let me say few words about parameters that we will pass.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With &lt;code&gt;-e&lt;/code&gt; we specify environment variables. Using them we define SID, PDB names and also password that will be set for SYS, SYSTEM, and PDBADMIN database users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; parameter publishes container ports to the host machine. &lt;/li&gt;
&lt;li&gt;Finally, &lt;code&gt;-v&lt;/code&gt; specifies bind mount for the directory that stores Oracle data files. &lt;strong&gt;You should replace &lt;code&gt;/path/to/some/directory&lt;/code&gt; with some valid path on your computer.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run --name oracle-db12.2-ee \
-p 1521:1521 -p 5500:5500 \
-e ORACLE_SID=ORCL1 \
-e ORACLE_PDB=ORCLPDB1 \
-e ORACLE_PWD=welcome \
-v /path/to/some/directory:/opt/oracle/oradata \
oracle/database:12.2.0.1-ee
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After executing the command, give it some time and you'll see following message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SQL&amp;gt; Disconnected from Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production
The Oracle base remains unchanged with value /opt/oracle
#########################
DATABASE IS READY TO USE!
#########################
The following output is now a tail of the alert.log:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Not surprisingly, it indicates that your Oracle is up and running. Congratulations!&lt;/p&gt;
&lt;h2&gt;Create a new user&lt;/h2&gt;
&lt;p&gt;The first thing that I usually do once I have a freshly built database - creating a user. Let's connect via SQL*Plus and set one up!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;While our container is running, open additional terminal session and execute &lt;code&gt;docker stop -t 60 oracle-db12.2-ee&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker exec -it oracle-db12.2-ee /bin/bash
[oracle@1e0aed256c62 ~]$ sqlplus / as sysdba

SQL*Plus: Release 12.2.0.1.0 Production on Wed Jul 18 07:36:15 2018

Copyright (c) 1982, 2016, Oracle.  All rights reserved.

Connected to:
Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production

SQL&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I also have a habit to check in which instance we are on before doing anything, it might be completely not needed here, but:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SQL&amp;gt; select instance_name from v$instance;

INSTANCE_NAME
----------------
ORCL1
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let's create a user named &lt;code&gt;test&lt;/code&gt; which is identified by &lt;code&gt;testpwd&lt;/code&gt; password. Of course, you may change the name and password to whatever you want. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SQL&amp;gt; ALTER SESSION SET CONTAINER = orclpdb1;

Session altered.

SQL&amp;gt; grant connect, resource to test identified by testpwd container=current;

Grant succeeded.

SQL&amp;gt; GRANT CREATE SESSION TO test container=current;

Grant succeeded.
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;That's it!&lt;/h3&gt;
&lt;p&gt;We are all set now. We have a database running. We have a user in it. For reference, here is configuration that I used to connect SQLDeveloper via &lt;code&gt;test&lt;/code&gt; user to the database&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180717_oracle_database_in_a_docker_container/sqldeveloper_new_connection.png" width="100%" alt="SQL Developer New Connection"&gt;&lt;/p&gt;
&lt;h3&gt;How to stop/restart created container&lt;/h3&gt;
&lt;p&gt;Sooner or later you will need to stop the container. An important thing to keep in mind - it is recommended to give Oracle additional time for shutdown activities. By default, when you stop a container Docker waits 10 seconds and then kills it. This may be too tight for Oracle Database. Let's make Docker wait up to one minute.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker stop -t 60 oracle-db12.2-ee
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you didn't remove stopped container, it remains available and you may start it again with following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker start oracle-db12.2-ee
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This command will start the container in background mode. You might also want to check its logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker logs oracle-db12.2-ee
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;br&gt;That's all that have for this post, my best wishes in using Docker!&lt;/p&gt;</content><category term="Oracle Database"></category><category term="Docker"></category></entry><entry><title>How to authenticate EBS users in JSP pages</title><link href="https://svovk.github.io/how-to-authenticate-ebs-users-in-jsp-pages.html" rel="alternate"></link><published>2018-07-11T10:20:00+03:00</published><updated>2018-07-11T10:20:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-07-11:/how-to-authenticate-ebs-users-in-jsp-pages.html</id><summary type="html">&lt;p&gt;Almost always Oracle Applications Framework is the preferable way for creating new pages for your Oracle EBS ecosystem. But in rare cases, OAF fails to fit the needs. For example, you might &lt;strong&gt;need&lt;/strong&gt; precise control over HTML code that is rendered. In such cases, Java Servlet Pages might be a â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Almost always Oracle Applications Framework is the preferable way for creating new pages for your Oracle EBS ecosystem. But in rare cases, OAF fails to fit the needs. For example, you might &lt;strong&gt;need&lt;/strong&gt; precise control over HTML code that is rendered. In such cases, Java Servlet Pages might be a good fallback.&lt;/p&gt;
&lt;p&gt;This fallback comes at a price though - in servlet pages, you have to do a lot of things manually. This post is to share a code snippet that might be used for authenticating Oracle EBS users in a custom JSP page. Often, it is the first thing that is done.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;
 &lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;java&amp;quot;&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oracle.apps.fnd.common.WebAppsContext&amp;quot;&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oracle.apps.fnd.common.WebRequestUtil&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;%&lt;/span&gt;
    &lt;span class="n"&gt;WebAppsContext&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebRequestUtil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validateContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;RuntimeException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Unable to get context&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getUserName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;%&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;%=&lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="o"&gt;%&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;%&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;freeWebAppsContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code is very straightforward, it gets &lt;code&gt;WebAppsContext&lt;/code&gt; object which is then used to request current username.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WebAppsContext&lt;/code&gt; is a quite basic object that tracks key Oracle EBS context information like responsibility, organization and etc. Behind the scenes, all these information is obtained based on &lt;code&gt;JSESSIONID&lt;/code&gt; cookie that is set for all pages under &lt;code&gt;http://your-url/OA_HTML/&lt;/code&gt; by the login screen.&lt;/p&gt;</content><category term="Oracle EBS"></category><category term="JSP"></category><category term="Java"></category></entry><entry><title>Benchmark - reading integer values</title><link href="https://svovk.github.io/benchmark-reading-integer-values.html" rel="alternate"></link><published>2018-07-01T23:50:00+03:00</published><updated>2018-07-01T23:50:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-07-01:/benchmark-reading-integer-values.html</id><summary type="html">&lt;p&gt;I like solving algorithmic problems. One of the routines that you do working on such tasks is implementing code for reading input data. In the challenges your code has to provide right answers in a specified timeframe and to achieve this sometimes it isn't enough to tune your algorithm - it â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I like solving algorithmic problems. One of the routines that you do working on such tasks is implementing code for reading input data. In the challenges your code has to provide right answers in a specified timeframe and to achieve this sometimes it isn't enough to tune your algorithm - it may be important to read input data fast. Especially it may be noticeable on problems with huge input datasets.&lt;/p&gt;
&lt;p&gt;To pick the fastest way I created a &lt;a href="https://github.com/svovk/jmh-benchmark-text-scanning"&gt;benchmark&lt;/a&gt; comparing different approaches for reading integers from a file (it is usual format of input data):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(measureScanner) &lt;code&gt;Scanner(File source)&lt;/code&gt; Scanner constructed based on FileReader&lt;/li&gt;
&lt;li&gt;(measureFileReaderScanner)&lt;code&gt;Scanner&lt;/code&gt; constructed using &lt;code&gt;Scanner(Readable source)&lt;/code&gt; constructor where &lt;code&gt;Readable&lt;/code&gt; is &lt;code&gt;FileReader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(measureBufferedFileReaderScanner) &lt;code&gt;Scanner&lt;/code&gt; constructed using &lt;code&gt;Scanner(Readable source)&lt;/code&gt; constructor where &lt;code&gt;Readable&lt;/code&gt; is &lt;code&gt;FileReader&lt;/code&gt; wrapped in &lt;code&gt;BufferedReader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(measureMyScanner) a bit reworked version of &lt;code&gt;MyScanner&lt;/code&gt; class (original one is published on &lt;a href="http://codeforces.com/blog/entry/7018"&gt;Codeforces&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And here are results that I get on my Mid 2012 MacBook Pro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Benchmark                                           Mode  Cnt        Score       Error  Units
TextScanBenchmark.measureBufferedFileReaderScanner  thrpt   25  1008316.536 Â±  5711.553  ops/s
TextScanBenchmark.measureFileReaderScanner          thrpt   25  1016116.706 Â±  8823.260  ops/s
TextScanBenchmark.measureMyScanner                  thrpt   25  6315469.046 Â± 81171.672  ops/s
TextScanBenchmark.measureScanner                    thrpt   25  1031693.182 Â±  7556.776  ops/s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the same numbers on a plot (red lines show errors)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Integer Values Read Benchmark" src="https://svovk.github.io/images/20180701_speed_of_input_reading_java/integer_values_read_benchmark.png"&gt;&lt;/p&gt;
&lt;p&gt;What can we conclude based on this?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;first of all, it doesn't matter how you create Scanner class - passing a &lt;code&gt;File&lt;/code&gt; to the constructor, &lt;code&gt;FileReader&lt;/code&gt; class or &lt;code&gt;FileReader&lt;/code&gt; class wrapped in &lt;code&gt;BufferedReader&lt;/code&gt; (&lt;code&gt;Scanner&lt;/code&gt; class itself has buffering logic and adding another layer of buffering doesn't add any value)&lt;/li&gt;
&lt;li&gt;to speed up the file reading process a custom class may be used (my &lt;a href="https://github.com/svovk/jmh-benchmark-text-scanning/blob/master/src/main/java/com/sergeivovk/io/MyScanner.java"&gt;example&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content><category term="Java"></category><category term="Competitive Programming"></category></entry><entry><title>Iterating over MultiList attribute values</title><link href="https://svovk.github.io/iterating-over-multilist-attribute-values.html" rel="alternate"></link><published>2018-06-25T00:10:00+03:00</published><updated>2018-06-25T00:10:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-06-25:/iterating-over-multilist-attribute-values.html</id><summary type="html">&lt;p&gt;I frequently work on enhancing functionality of Event Handlers and Process Extensions developed by 3rd party companies and relativery often notice doubtful patterns in the code. Here is one from top 10 list. Many developers use following approach for iterating over selected MultiList attribute values:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getValue&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Page â€¦&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I frequently work on enhancing functionality of Event Handlers and Process Extensions developed by 3rd party companies and relativery often notice doubtful patterns in the code. Here is one from top 10 list. Many developers use following approach for iterating over selected MultiList attribute values:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getValue&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Page Three.MultiList01&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First of all, this code has some overhead as it concatenates selected multilist values into one string and then splits this string. Then, it relays on toString() result which behavior is not guaranteed. I would prefer following approach to do the same (in Java 7)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IAgileList&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; 
        &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;IAgileList&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dataObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getValue&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Page Three.MultiList01&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;getSelection&lt;/span&gt;&lt;span class="o"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getValue&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yes, it's a bit more complicated but I like that now one may actually &lt;em&gt;read&lt;/em&gt; the code.&lt;/p&gt;
&lt;p&gt;In Groovy the same approach may be used in combination with a closure which makes our code even more expressive and shorter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dataObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getValue&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Page Three.MultiList01&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;getSelection&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Agile PLM"></category><category term="Groovy"></category><category term="Java"></category></entry><entry><title>Agile PLM Dashboard Optional Tabs - database tables</title><link href="https://svovk.github.io/agile-plm-dashboard-optional-tabs-database-tables.html" rel="alternate"></link><published>2018-05-19T00:14:00+03:00</published><updated>2018-05-19T00:14:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-05-19:/agile-plm-dashboard-optional-tabs-database-tables.html</id><summary type="html">&lt;p&gt;Recently I was working on a data issue which prevented a person from using Optional Tab 1 of his Dashboard. When the user clicked on the tab, Agile showed "Object does not exists" error and nothing else appeared. Researching this issue brought me to understanding of some relations in Agile â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I was working on a data issue which prevented a person from using Optional Tab 1 of his Dashboard. When the user clicked on the tab, Agile showed "Object does not exists" error and nothing else appeared. Researching this issue brought me to understanding of some relations in Agile DB Schema which I would like to discuss in this post.&lt;/p&gt;
&lt;p&gt;I don't think Dashboard DB structure is something that Oracle changes frequently, but I should mention that I worked on the issue in Agile PLM 9.3.6.4 and didn't validate if all relations are the same in any other PLM versions.&lt;/p&gt;
&lt;h2&gt;Dashboard&lt;/h2&gt;
&lt;p&gt;As for many other setup entities, database schema journey starts with one of the most basic tables in Agile PLM schema - &lt;code&gt;nodetable&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lpad&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;+ &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;level&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;nodetable&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="k"&gt;CONNECT&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parentId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;PRIOR&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;START&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Dashboard Management&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This query shows us hierarchy under Dashboard Management node &lt;code&gt;(Java Client) Admin -&amp;gt; System Settings -&amp;gt; Dashboard Management&lt;/code&gt;. Here is what it shows in my environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ID          NODE
----------  ----------------------
2000000001  + Dashboard Management  
...
2000000111   + Optional Tab 1
2000000112    + Table 1
2000000113    + Table 2
2000000114    + Table 3
2000000115    + Table 4
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we have node ids and may query what Optional Tab 1 tables actually display:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;tableId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tableName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;userId&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;query_table&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;tableId&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000000111&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000000112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000000113&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000000114&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Few important points about &lt;code&gt;query_table&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As you know, each user sets content of his/her optional tab tables. That is why &lt;code&gt;query_table&lt;/code&gt; has &lt;code&gt;userId&lt;/code&gt; column (it is a foreign key to &lt;code&gt;agileuser&lt;/code&gt; table).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queryId&lt;/code&gt; is a foreign key to &lt;code&gt;query&lt;/code&gt; table&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tableName&lt;/code&gt; is a user-friendly name of the table&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: when you define a custom dashboard table with query for all users &lt;code&gt;userId&lt;/code&gt; will be set to NULL.&lt;/p&gt;
&lt;h2&gt;Issue&lt;/h2&gt;
&lt;p&gt;In my case, root cause of the error was following - one of the query ids specified in &lt;code&gt;query_table&lt;/code&gt; wasn't actually defined in &lt;code&gt;query&lt;/code&gt; table. To fix the problem, I deleted &lt;code&gt;query_table&lt;/code&gt; row that had inconsistent data which moved the tab table to no-query-assigned state.&lt;/p&gt;
&lt;p&gt;Please note that it is not recommended to apply any data fixes to Agile Database Schema without confirming with Oracle that they are valid.&lt;/p&gt;
&lt;h2&gt;Other tables to check&lt;/h2&gt;
&lt;p&gt;When you see an issue like that it always worth to check other tables that might have orphan records referring to the same missing row. Here are few additional tables that might refer to a query id:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;select_list&lt;/code&gt; table contains information about fields to be displayed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select * select_list where query_id = &amp;lt;queryId&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foldering&lt;/code&gt; table stores information about folders under which queries are stored&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select * from foldering where objectid = &amp;lt;queryId&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;criteria&lt;/code&gt; table contains information about query filters&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select * from criteria where query_id = &amp;lt;queryId&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;</content><category term="Agile PLM"></category><category term="Agile Database Schema"></category></entry><entry><title>Weblogic Data Sources in Agile PLM Groovy Handlers</title><link href="https://svovk.github.io/weblogic-data-sources-in-agile-plm-groovy-handlers.html" rel="alternate"></link><published>2018-05-09T10:20:00+03:00</published><updated>2018-05-09T10:20:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-05-09:/weblogic-data-sources-in-agile-plm-groovy-handlers.html</id><summary type="html">&lt;p&gt;In this note, I will demonstrate how to configure JDBC Data Source in Weblogic and then use it in Agile PLM Groovy Handler. Oracle doesn't recommend query or modify Agile DB schema directly, although, code interacting with some other DB or schema is a valid approach. Please note that depending â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this note, I will demonstrate how to configure JDBC Data Source in Weblogic and then use it in Agile PLM Groovy Handler. Oracle doesn't recommend query or modify Agile DB schema directly, although, code interacting with some other DB or schema is a valid approach. Please note that depending on the particular integration case it might not be the best option to retrieve the data directly from external DB (but I won't discuss different approaches here).&lt;/p&gt;
&lt;h2&gt;Configure JDBC Data Source&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Log in Weblogic Administration Console&lt;/p&gt;
&lt;p&gt;&lt;img alt="WebLogic Admin Console" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_0.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To start configuration change press 'Lock &amp;amp; Edit'&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lock configuration for edit" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_1a.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate Services -&amp;gt; Data Sources in your domain (Domain Structure pane)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click New button and choose Generic Data Source&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify Name, JNDI Name, Database Type and click Next &lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Names" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_3.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose DB driver to be used and click Next&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Driver" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_4.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leave transaction options default&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Transaction Options" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_5.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Populate DB connectivity data - database name, server name, port, account and press Next&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Connection" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_6.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test configuration and click Next&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Test" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_7.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the next screen choose servers to deploy created Data Source and press Finish&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Deploy" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_8.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make the changes effective press 'Activate Changes' button&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Data Source - Deploy" src="https://svovk.github.io/images/20180509_weblogic_datasource_in_groovy_handlers/Screenshot_9.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Use created Data Source in Groovy Handler&lt;/h2&gt;
&lt;p&gt;Usage is actually pretty straightforward, you may find an example below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.agile.agileDSL.ScriptObj.IBaseScriptObj&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;groovy.sql.Sql&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.naming.InitialContext&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;invokeScript&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IBaseScriptObj&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;Sql&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Sql&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;InitialContext&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;lookup&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My JDBC Data Source&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eachRow&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select 1  test from dual&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;logDebug&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;selected number is ${row.test}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that we construct &lt;code&gt;Sql&lt;/code&gt; using the DataSource. Each operation will use a Connection from the DataSource pool and close it when the operation is completed putting it back into the pool. This makes explit &lt;code&gt;sql.close()&lt;/code&gt; call not required.&lt;/p&gt;</content><category term="Agile PLM"></category><category term="Groovy"></category><category term="Weblogic"></category><category term="JDBC"></category><category term="JNDI"></category></entry><entry><title>How to install Oracle Developer Suite on Windows 10</title><link href="https://svovk.github.io/how-to-install-oracle-developer-suite-on-windows-10.html" rel="alternate"></link><published>2018-05-08T10:20:00+03:00</published><updated>2018-05-08T10:20:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-05-08:/how-to-install-oracle-developer-suite-on-windows-10.html</id><summary type="html">&lt;p&gt;In spite of the fact that Oracle Developer Suite is certified with Windows 10, ODS installation that I did some time ago wasn't smooth. It required few tricks to make it work. Below you may find step by step description of the process. Note that I reference few Oracle Support â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In spite of the fact that Oracle Developer Suite is certified with Windows 10, ODS installation that I did some time ago wasn't smooth. It required few tricks to make it work. Below you may find step by step description of the process. Note that I reference few Oracle Support resources in the post, to download them you'll need Oracle Support subscription. &lt;/p&gt;
&lt;h2&gt;Downloading&lt;/h2&gt;
&lt;p&gt;For the installation you will need&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Base software media: Oracle Developer Suite 10g (10.1.2.0.2). You may download both disks from &lt;a href="http://www.oracle.com/technetwork/developer-tools/developer-suite/downloads/101202winsoft-087370.html"&gt;Oracle&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Following patches from Oracle Support&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Patch 10396165 WINDOWS 7 CERT:NEED AN INSTALL ONE OFF PATCH FOR IDS 10.1.2.0.2&lt;/li&gt;
&lt;li&gt;Patch 5983622 Oracle Application Server 10g Release 2 (10.1.2) Patch Set 3 (10.1.2.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Oracle Installation utility is not able to check memory settings correctly and that's why it is required to explicitly specify minimum swap file size before the installation: Start Menu &gt; click on Settings &gt; Adjust the appearance and performance of Windows &gt; Advanced &gt; Change (Virtual memory section) &gt; Uncheck the automatic setting, set the initial size to 256 MB and set maximum size to whatever you need (for example 8GB) and click Set. You may revert this change back after the installation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot your machine as Windows will request after the change&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run setup.exe delivered via Patch 10396165 with following command (via
    &lt;strong&gt;elevated&lt;/strong&gt; command prompt)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;setup.exe -ignoreSysPrereqs
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click Next&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify path to products.xml from Disk 1 from ODS archive (path should not contain any spaces) and click Next&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180508_install_oracle_dev_tools_win_10/Screenshot1.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose Complete Installation and click Next&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180508_install_oracle_dev_tools_win_10/Screenshot2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Press Install and wait for installation completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During the installation it will ask you where Disk 2 of ODS Base software media is located&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upgrading to ODS 10.1.2.3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you performed all above steps correctly, now you should have ODS 10.1.2.0.2 installed, let's upgrade it to 10.1.2.3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unpack content of Patch 5983622 and click on setup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We may run this installer without any command-line options, but it will prompt if we would like to ignore our OS version (choose y)&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180508_install_oracle_dev_tools_win_10/Screenshot3.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose same directory which was used during previous installation&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180508_install_oracle_dev_tools_win_10/Screenshot4.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then choose 1st product&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180508_install_oracle_dev_tools_win_10/Screenshot5.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And click Install&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://svovk.github.io/images/20180508_install_oracle_dev_tools_win_10/Screenshot6.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other References&lt;/h2&gt;
&lt;p&gt;There is no dedicated Oracle Support note describing installation process for Windows 10. Oracle suggests using one specified below. Please refer it for additional details.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Certification of Oracle Developer Suite 10g (10.1.2) on Windows 7 (32-bit) (Doc ID 1292919.1)&lt;/li&gt;
&lt;/ul&gt;</content><category term="Oracle EBS"></category><category term="Oracle Developer Suite"></category><category term="Windows 10"></category></entry><entry><title>Analyzing Agile PLM log files with Python</title><link href="https://svovk.github.io/analyzing-agile-plm-log-files-with-python.html" rel="alternate"></link><published>2018-05-07T10:20:00+03:00</published><updated>2018-05-07T10:20:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-05-07:/analyzing-agile-plm-log-files-with-python.html</id><summary type="html">&lt;p&gt;Sometimes it is useful to get an overview of log files generated by a system and Agile PLM is not an exception. For logging Agile uses &lt;em&gt;log4j&lt;/em&gt; library which is capable of producing very parsing-friendly formats. Although in practice the system is usually configured to generate plain text files in â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes it is useful to get an overview of log files generated by a system and Agile PLM is not an exception. For logging Agile uses &lt;em&gt;log4j&lt;/em&gt; library which is capable of producing very parsing-friendly formats. Although in practice the system is usually configured to generate plain text files in which log entries look like one below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2000-10-10 00:01:21,043 &amp;lt;ChangeHistoryService:ERROR&amp;gt;    process change notification failed:
ORA-00001: unique constraint (AGILE.CHANGE_HISTORY_PK) violated

ORA-00001: unique constraint (AGILE.CHANGE_HISTORY_PK) violated

java.sql.BatchUpdateException: ORA-00001: unique constraint (AGILE.CHANGE_HISTORY_PK) violated

    at oracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePreparedStatement.java:10401)
    at oracle.jdbc.driver.OracleStatementWrapper.executeBatch(OracleStatementWrapper.java:230)
    at weblogic.jdbc.wrapper.PreparedStatement.executeBatch(PreparedStatement.java:205)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertHistoryRecords(BaseRouteDAO.java:4797)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertHistoryRecord(BaseRouteDAO.java:4741)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertChangeHistory(BaseRouteDAO.java:4720)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertChangeHistory(BaseRouteDAO.java:4678)
    at com.agile.pc.cmserver.base.BaseRouteDAO.logTAHistory(BaseRouteDAO.java:402)
    at com.agile.pc.cmserver.notification.ChangeHistoryDAO.logTAHistories(ChangeHistoryDAO.java:559)
    at com.agile.pc.cmserver.notification.ChangeHistoryService.transferSignOffs(ChangeHistoryService.java:379)
    at com.agile.pc.cmserver.notification.ChangeHistoryService.processChangeHistory(ChangeHistoryService.java:286)
    at com.agile.pc.cmserver.notification.ChangeHistoryService.processChangeHistories(ChangeHistoryService.java:119)
    at com.agile.pc.cmserver.notification.NotifyTask.processChangeHistory(NotifyTask.java:566)
    at com.agile.pc.cmserver.notification.NotifyTask.run(NotifyTask.java:214)
    at java.util.TimerThread.mainLoop(Timer.java:555)
    at java.util.TimerThread.run(Timer.java:505)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just for reference, it was produced by appender with following configuration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;appender&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;AgileLog&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;org.apache.log4j.RollingFileAppender&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;File&amp;quot;&lt;/span&gt;   &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;agile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/agile.log&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;layout&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;org.apache.log4j.PatternLayout&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;param&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ConversionPattern&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d\t&amp;amp;lt;%c{1}:%p&amp;amp;gt;\t%m\n&amp;quot;/&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Definitely, for automated log file analysis, it is better to reconfigure log4j. Although, mentioned layout is still something we may parse and process. Well, it's not the best option but sometimes you don't have time to wait until new log files will be generated. Let's go through one example.&lt;/p&gt;
&lt;h2&gt;Log files to be analyzed&lt;/h2&gt;
&lt;p&gt;Agile PLM produces a number of log files. In this analysis, I will use only one of them: &lt;code&gt;agile.log&lt;/code&gt;. This log file is generated by &lt;code&gt;AgileLog&lt;/code&gt; appender which is used by various logging categories throughout &lt;code&gt;log.xml&lt;/code&gt; configuration.&lt;/p&gt;
&lt;h2&gt;Preprocessing&lt;/h2&gt;
&lt;p&gt;Concatenate all the files we are going to process &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;agile.log
agile.log.1
agile.log.2
agile.log.3
agile.log.4
agile.log.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;into a one file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat agile.log* &amp;gt; agile_all_logs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;after that, let's convert &lt;code&gt;agile_all_logs&lt;/code&gt; into CSV format which is much better for further processing. Here is a python script for it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;input_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;in/agile_all_logs&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;output_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;out/agile_all_logs.csv&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;csv_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;quoting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QUOTE_MINIMAL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lineterminator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;processing &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;input_file&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# variable to store and accumulate logical log entry&lt;/span&gt;
        &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="n"&gt;line_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;inp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;line_num&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="c1"&gt;# we consider row that starts with YYYY-MM-DD date as a start&lt;/span&gt;
            &lt;span class="c1"&gt;# of new log entry&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\d{4}-\d{2}-\d{2}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
                        &lt;span class="n"&gt;csv_writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writerow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                    &lt;span class="c1"&gt;# number of entries separated with tab&lt;/span&gt;
                    &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxsplit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Warning IndexError on line #&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line_num&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="c1"&gt;# skip existing content&lt;/span&gt;
                &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

        &lt;span class="n"&gt;csv_writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writerow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After the processing our log entries should look like following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2000-10-10,&amp;quot;00:01:21,043&amp;quot;,&amp;lt;ChangeHistoryService:ERROR&amp;gt;,&amp;quot;process change notification failed: 
ORA-00001: unique constraint (AGILE.CHANGE_HISTORY_PK) violated

ORA-00001: unique constraint (AGILE.CHANGE_HISTORY_PK) violated

java.sql.BatchUpdateException: ORA-00001: unique constraint (AGILE.CHANGE_HISTORY_PK) violated

    at oracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePreparedStatement.java:10401)
    at oracle.jdbc.driver.OracleStatementWrapper.executeBatch(OracleStatementWrapper.java:230)
    at weblogic.jdbc.wrapper.PreparedStatement.executeBatch(PreparedStatement.java:205)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertHistoryRecords(BaseRouteDAO.java:4797)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertHistoryRecord(BaseRouteDAO.java:4741)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertChangeHistory(BaseRouteDAO.java:4720)
    at com.agile.pc.cmserver.base.BaseRouteDAO.insertChangeHistory(BaseRouteDAO.java:4678)
    at com.agile.pc.cmserver.base.BaseRouteDAO.logTAHistory(BaseRouteDAO.java:402)
    at com.agile.pc.cmserver.notification.ChangeHistoryDAO.logTAHistories(ChangeHistoryDAO.java:559)
    at com.agile.pc.cmserver.notification.ChangeHistoryService.transferSignOffs(ChangeHistoryService.java:379)
    at com.agile.pc.cmserver.notification.ChangeHistoryService.processChangeHistory(ChangeHistoryService.java:286)
    at com.agile.pc.cmserver.notification.ChangeHistoryService.processChangeHistories(ChangeHistoryService.java:119)
    at com.agile.pc.cmserver.notification.NotifyTask.processChangeHistory(NotifyTask.java:566)
    at com.agile.pc.cmserver.notification.NotifyTask.run(NotifyTask.java:214)
    at java.util.TimerThread.mainLoop(Timer.java:555)
    at java.util.TimerThread.run(Timer.java:505)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Analysis&lt;/h2&gt;
&lt;p&gt;In this part, we will generate a summary table showing top error messages. To do it we will use python data analysis library called &lt;em&gt;Pandas&lt;/em&gt;. It allows us do the whole analysis in few simple steps.&lt;/p&gt;
&lt;h4&gt;1. Import&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;out/agile_all_logs.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;parse_dates&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;at this stage imported data frame has following format&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180507_agile_plm_log_analisys/initial_data_frame.png" width="100%" alt="initial data frame format"&gt;&lt;/p&gt;
&lt;h4&gt;2. Adjust&lt;/h4&gt;
&lt;p&gt;In this step we&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;split 'source' column into 2 columns&lt;/li&gt;
&lt;li&gt;may also drop columns that will not be included in the analysis &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;(\w+):(\w+)&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;log_level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180507_agile_plm_log_analisys/adjusted_data_frame.png" width="80%" alt="initial data frame format"&gt;&lt;/p&gt;
&lt;h4&gt;3. Group&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# group the data by class, log_leve, and message and export to csv file&lt;/span&gt;
&lt;span class="n"&gt;grouped&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;log_level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;\
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;\
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;counts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;counts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we see top log entries&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180507_agile_plm_log_analisys/result_data_frame.png" width="80%" alt="initial data frame format"&gt;&lt;/p&gt;
&lt;h4&gt;4. Export&lt;/h4&gt;
&lt;p&gt;We might also export results&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;grouped&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;out/summary.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Agile PLM"></category><category term="Python"></category><category term="Pandas"></category></entry><entry><title>How to set up Eclipse for developing Agile PLM Script Event Handlers</title><link href="https://svovk.github.io/how-to-set-up-eclipse-for-developing-agile-plm-script-event-handlers.html" rel="alternate"></link><published>2018-05-03T22:30:00+03:00</published><updated>2018-05-03T22:30:00+03:00</updated><author><name>Sergei Vovk</name></author><id>tag:svovk.github.io,2018-05-03:/how-to-set-up-eclipse-for-developing-agile-plm-script-event-handlers.html</id><summary type="html">&lt;p&gt;Groovy Script PXs were introduced in Agile 9.3.0 and since then conquered the hearts of many Agile PLM users. I find myself using Groovy Scripts very frequently as it allows deliver product faster and make your code way more expressive. In this post, I will go through steps â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Groovy Script PXs were introduced in Agile 9.3.0 and since then conquered the hearts of many Agile PLM users. I find myself using Groovy Scripts very frequently as it allows deliver product faster and make your code way more expressive. In this post, I will go through steps to set up your Eclipse IDE for Groovy PX Development.&lt;/p&gt;
&lt;h3&gt;1. Install Groovy-Eclipse plugin into your Eclipse IDE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Visit Groovy-Eclipse GitHub wiki page: &lt;a href="https://github.com/groovy/groovy-eclipse/wiki"&gt;Groovy-Eclipse&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy installation URL for your Eclipse version from Releases or Snapshot Builds section&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/groovy_eclipse_snapshot_builds.png" width="50%" alt="Groovy plugin snapshots"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Eclipse and navigate 'Help -&gt;Install New Software...' from the top menu&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/install_new_software.png" width="25%" alt="Eclipse install new software"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paste copied URL and press Enter&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/available_software2.png" width="50%" alt="Eclipse available software window"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check 'Groovy-Eclipse Feature' and compilers to be used&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/available_software2.png" width="50%" alt="Eclipse available software window 2"&gt;&lt;/p&gt;
&lt;p&gt;Note: Most recent Agile version at the moment is 9.3.6.4 and it uses groovy-2.4.6. You may find your Groovy version by executing following from your Agile PLM home&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -iname groovy*
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. Create Groovy Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Navigate File -&amp;gt; New -&amp;gt; Other&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/file_new_other.png" width="50%" alt="File -&gt; New -&amp;gt; Other..."&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select "Groovy Project"&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/groovy_project.png" width="50%" alt="Groovy Project"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type project name and click Finish&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/new_project.png" width="50%" alt="Project Name"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy agileclasses.jar and AgileAPI.jar files to your local machine. Here is quick and easy way to find them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd $AGILE_HOME
find . -iname agileclasses.jar
find . -iname AgileAPI.jar
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to Project properties and add copied JARs&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/properties.png" width="50%" alt="Add JARs"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Right click on 'src' and choose new -&amp;gt; other&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/src_new_other.png" width="50%" alt="src-&gt;new-&amp;gt;other"&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose Groovy class&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill create a new Groovy class form&lt;/p&gt;
&lt;p&gt;&lt;img src="https://svovk.github.io/images/20180503_developing_script_event_handlers_with_eclipse/new_class.png" width="50%" alt="groovy class"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paste Agile Groovy Event code into created class file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.agile.agileDSL.ScriptObj.IBaseScriptObj&lt;/span&gt;

&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;invokeScript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IBaseScriptObj&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="n"&gt;starts&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;</content><category term="Agile PLM"></category><category term="Groovy"></category><category term="Eclipse"></category></entry></feed>